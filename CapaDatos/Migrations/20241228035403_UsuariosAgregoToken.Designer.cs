// <auto-generated />
using System;
using CapaDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapaEntidades.Migrations
{
    [DbContext(typeof(DbcarritoContext))]
    [Migration("20241228035403_UsuariosAgregoToken")]
    partial class UsuariosAgregoToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Carrito", b =>
                {
                    b.Property<int>("IdCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_carrito");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrito"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    b.HasKey("IdCarrito")
                        .HasName("PK__CARRITO__83A2AD9CC8813B02");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdProducto");

                    b.ToTable("CARRITO", (string)null);
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Categorium", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__CD54BC5A4B17ED63");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellidos")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Clave")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clave");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<bool?>("Reestablecer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("reestablecer");

                    b.HasKey("IdCliente")
                        .HasName("PK__CLIENTE__677F38F5FAEEAFD5");

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Departamento", b =>
                {
                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("descripcion");

                    b.Property<string>("IdDepartamento")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("id_departamento");

                    b.ToTable("Departamento", (string)null);
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.DetalleVentum", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalleVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__DETALLE___3C2E445C1E573307");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("DETALLE_VENTA", (string)null);
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Distrito", b =>
                {
                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("descripcion");

                    b.Property<string>("IdDepartamento")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("id_departamento");

                    b.Property<string>("IdDistrito")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("id_distrito");

                    b.Property<string>("IdMunicipio")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("id_municipio");

                    b.ToTable("Distrito", (string)null);
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdMarca")
                        .HasName("PK__MARCA__7E43E99E4AC648D5");

                    b.ToTable("MARCA", (string)null);
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Municipio", b =>
                {
                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("descripcion");

                    b.Property<string>("IdDepartamento")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("id_departamento");

                    b.Property<string>("IdMunicipio")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("id_municipio");

                    b.ToTable("Municipio", (string)null);
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    b.Property<int?>("IdMarca")
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreImagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre_imagen");

                    b.Property<decimal?>("Precio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 0)")
                        .HasDefaultValue(0m)
                        .HasColumnName("precio");

                    b.Property<string>("RutaImagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ruta_imagen");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("IdProducto")
                        .HasName("PK__PRODUCTO__FF341C0D1243BBD6");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdMarca");

                    b.ToTable("PRODUCTO", (string)null);
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Clave")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("clave");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombres")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombres");

                    b.Property<bool?>("Reestablecer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("reestablecer");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__USUARIO__8E901EAA4E322349");

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Ventum", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<string>("Contacto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<string>("IdDistrito")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_distrito");

                    b.Property<string>("IdTransaccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_transaccion");

                    b.Property<decimal?>("MontoTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TotalProducto")
                        .HasColumnType("int");

                    b.HasKey("IdVenta")
                        .HasName("PK__VENTA__459533BF4CE4F81F");

                    b.HasIndex("IdCliente");

                    b.ToTable("VENTA", (string)null);
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Carrito", b =>
                {
                    b.HasOne("CapaEntidades.CapaEntidades.Cliente", "IdClienteNavigation")
                        .WithMany("Carritos")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Carrito_Categoria");

                    b.HasOne("CapaEntidades.CapaEntidades.Producto", "IdProductoNavigation")
                        .WithMany("Carritos")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_Carrito_Marca");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.DetalleVentum", b =>
                {
                    b.HasOne("CapaEntidades.CapaEntidades.Producto", "IdProductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("fk_id_producto");

                    b.HasOne("CapaEntidades.CapaEntidades.Ventum", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("fk_id_venta");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Producto", b =>
                {
                    b.HasOne("CapaEntidades.CapaEntidades.Categorium", "categoria")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_Productos_Categoria");

                    b.HasOne("CapaEntidades.CapaEntidades.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("FK_Productos_Marca");

                    b.Navigation("Marca");

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Ventum", b =>
                {
                    b.HasOne("CapaEntidades.CapaEntidades.Cliente", "IdClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("fk_id_cliente");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Categorium", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Cliente", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Producto", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("CapaEntidades.CapaEntidades.Ventum", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
